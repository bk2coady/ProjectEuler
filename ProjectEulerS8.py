#Problem8
#Find the 13 digits that have the greatest product

input_num = str(7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450)

def split_number(number):
	a = int(number)
	digits = []
	while (a >= 1):
		digits.insert(0,a % 10)
		#print(a % 10)
		a = a // 10
	return digits

def max_product(number, k):
	digits = split_number(number)
	max_value = 1
	for i in range(len(digits)-k+1):
		value = 1
		for j in range(i,k+i):
			#print(j)
			value *= digits[j]
		if value > max_value:
			max_value = value
			#print(max_value)
	return max_value

def better_max_product(num, k):
	max_value = 1
	for i in range(len(num)-k+1):
		value = 1
		for j in range(i, k+i):
			value *= int(num[j])
		if value > max_value:
			max_value = value
	return max_value

print(max_product(input_num, 13))
print(better_max_product(input_num, 13))
